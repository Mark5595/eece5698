#!/usr/bin/env python
# -*- coding: utf-8 -*-
# for BU-353s4 GPS Sensor

import sys
import lcm
import time
import serial
import utm
import gps_packet


class Gps(object):
    def __init__(self, port_name):
        self.port = serial.Serial(port_name, 4800, timeout=1.)  # 4800-N-8-1
        self.lcm = lcm.LCM("udpm://?ttl=12")
        self.packet = gps_packet.gps_packet_t()
        print 'Gps: Initialization'
        line = self.port.readline()
        try:
            vals = [float(x) for x in line.split(' ')]
        except:
            vals = 0

    def readloop(self):
        while True:
            line = self.port.readline()
            try:
                vals = [x for x in line.split(',')]
                if vals[0] == "$GPGGA":
                    print "Received Message..." + line
                    self.packet_from_response(vals)
                    self.lcm.publish("Gps", self.packet.encode())
            except Exception as e:
                print 'Gps ERROR (' + line + ')'
                print e + "\n"
    
    def packet_from_response(self, vals):
        """
        Creates a gps_packet_t from a serial line response. 
        """
        self.packet.timestamp = int(vals[1])
        self.packet.lat = float(vals[2])
        self.packet.lon = float(vals[4])
        self.packet.alt = float(vals[9])
        
        try:
            utm_repr = utm.from_latlon(self.packet.lat, self.packet.lon)
            self.packet.utm_x = utm_repr(0)
            self.packet.utm_y = utm_repr(1)
        except Exception as e: 
            print "Error trying to convert to utm: " + e


if __name__ == "__main__":
    if len(sys.argv) != 2:
        print "Usage: %s <serial_port>\n" % sys.argv[0]
        sys.exit(0)
    myGps = Gps(sys.argv[1])
    myGps.readloop()
