/* LCM type definition class file
 * This file was automatically generated by lcm-gen
 * DO NOT MODIFY BY HAND!!!!
 */

package my_types;
 
import java.io.*;
import java.util.*;
import lcm.lcm.*;
 
public final class gps_packet_t implements lcm.lcm.LCMEncodable
{
    public float timestamp;
    public float lat;
    public float lon;
    public float alt;
    public float utm_x;
    public float utm_y;
 
    public gps_packet_t()
    {
    }
 
    public static final long LCM_FINGERPRINT;
    public static final long LCM_FINGERPRINT_BASE = 0xa30f84a9c2cb5440L;
 
    static {
        LCM_FINGERPRINT = _hashRecursive(new ArrayList<Class<?>>());
    }
 
    public static long _hashRecursive(ArrayList<Class<?>> classes)
    {
        if (classes.contains(my_types.gps_packet_t.class))
            return 0L;
 
        classes.add(my_types.gps_packet_t.class);
        long hash = LCM_FINGERPRINT_BASE
            ;
        classes.remove(classes.size() - 1);
        return (hash<<1) + ((hash>>63)&1);
    }
 
    public void encode(DataOutput outs) throws IOException
    {
        outs.writeLong(LCM_FINGERPRINT);
        _encodeRecursive(outs);
    }
 
    public void _encodeRecursive(DataOutput outs) throws IOException
    {
        outs.writeFloat(this.timestamp); 
 
        outs.writeFloat(this.lat); 
 
        outs.writeFloat(this.lon); 
 
        outs.writeFloat(this.alt); 
 
        outs.writeFloat(this.utm_x); 
 
        outs.writeFloat(this.utm_y); 
 
    }
 
    public gps_packet_t(byte[] data) throws IOException
    {
        this(new LCMDataInputStream(data));
    }
 
    public gps_packet_t(DataInput ins) throws IOException
    {
        if (ins.readLong() != LCM_FINGERPRINT)
            throw new IOException("LCM Decode error: bad fingerprint");
 
        _decodeRecursive(ins);
    }
 
    public static my_types.gps_packet_t _decodeRecursiveFactory(DataInput ins) throws IOException
    {
        my_types.gps_packet_t o = new my_types.gps_packet_t();
        o._decodeRecursive(ins);
        return o;
    }
 
    public void _decodeRecursive(DataInput ins) throws IOException
    {
        this.timestamp = ins.readFloat();
 
        this.lat = ins.readFloat();
 
        this.lon = ins.readFloat();
 
        this.alt = ins.readFloat();
 
        this.utm_x = ins.readFloat();
 
        this.utm_y = ins.readFloat();
 
    }
 
    public my_types.gps_packet_t copy()
    {
        my_types.gps_packet_t outobj = new my_types.gps_packet_t();
        outobj.timestamp = this.timestamp;
 
        outobj.lat = this.lat;
 
        outobj.lon = this.lon;
 
        outobj.alt = this.alt;
 
        outobj.utm_x = this.utm_x;
 
        outobj.utm_y = this.utm_y;
 
        return outobj;
    }
 
}

